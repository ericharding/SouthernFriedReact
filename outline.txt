Focus on WHAT and WHY. Not as much how.

Why > What > How

Key Idea:
   You can use fable without rewriting your whole project.

How = live demo?

"A memorable talk takes a concise idea, makes the audience care about it, and has a clear and convincing execution."

=============
1. Introduce Myself
   - BTS
   - chicken sandwich

//
// WHAT

2. What is F#
   - If you're N talks into an F# conference and you still don't know I can't help you
3. What is Fable?
   - Recommended path?
   - What is Elmish?
   - FABLE
   - babel/webpack
3.1 Webpack/Babel
   - Fable

//
// WHY

* Participate in the javascript ecosystem
* Try out F# without fully committing


4. Fable has taken advantage of the JavaScript/react ecosystem
   * Elmish depends on react

4. Elmish is amazing if you're starting fresh
   We don't usually have that luxury

5. Options
   - Mix/match in one project?
      what boundaries?
   - Needs your team to be onboard

> **Atwood's Law**: any application that can be written in JavaScript, will eventually be written in JavaScript.

//
// How

1. With a react component
2. With an Elm component
   - I've heard about this Elmish thing and want to use that
   - aside: about LazyView

   
=
Why?
- 'test drive' F# in your existing app
- Give back to the React/JavaScript community
- (low-key) Evangelize F#


